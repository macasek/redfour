v1.
{<<"/Users/rob/Working/littlewins-elixir/demos/physics/_build/test/lib/timex/ebin/Elixir.Timex.Format.FormatError.beam">>,
 'Elixir.Timex.Format.FormatError',<<"lib/format/format_error.ex">>,
 [erlang,'Elixir.Kernel.Def','Elixir.Map','Elixir.Kernel.Typespec',
  'Elixir.Kernel','Elixir.Keyword','Elixir.Module','Elixir.Protocol',
  'Elixir.String','Elixir.Exception'],
 [],[],nil}.
{<<"/Users/rob/Working/littlewins-elixir/demos/physics/_build/test/lib/timex/ebin/Elixir.Timex.Parse.DateTime.Helpers.beam">>,
 'Elixir.Timex.Parse.DateTime.Helpers',<<"lib/parse/datetime/helpers.ex">>,
 ['Elixir.Kernel','Elixir.Module','Elixir.Combine.Parsers.Base',
  'Elixir.Combine.Parsers.Text'],
 [erlang,'Elixir.String.Chars','Elixir.String','Elixir.Float','Elixir.Enum'],
 [],nil}.
{<<"/Users/rob/Working/littlewins-elixir/demos/physics/_build/test/lib/timex/ebin/Elixir.Timex.Date.Convert.beam">>,
 'Elixir.Timex.Date.Convert',<<"lib/date/date_convert.ex">>,
 [erlang,'Elixir.Kernel.Typespec','Elixir.Kernel','Elixir.Module',
  'Elixir.Protocol',lists,'Elixir.Timex.DateTime','Elixir.Atom'],
 ['Elixir.Timex.Date.Convert.Function','Elixir.Timex.Date.Convert.PID',
  'Elixir.Timex.Date.Convert.Map','Elixir.Timex.Date.Convert.Atom',
  'Elixir.Timex.Date.Convert.Port','Elixir.Timex.Date.Convert.Tuple',
  'Elixir.Timex.Date.Convert.List','Elixir.Timex.Date.Convert.Reference',
  'Elixir.Timex.Date.Convert.BitString','Elixir.Timex.Date.Convert.Float',
  'Elixir.Timex.Date.Convert.Integer','Elixir.Code',
  'Elixir.Protocol.UndefinedError'],
 [],nil}.
{<<"/Users/rob/Working/littlewins-elixir/demos/physics/_build/test/lib/timex/ebin/Elixir.Timex.Parse.ParseError.beam">>,
 'Elixir.Timex.Parse.ParseError',<<"lib/parse/parse_error.ex">>,
 [erlang,'Elixir.Kernel.Def','Elixir.Map','Elixir.Kernel.Typespec',
  'Elixir.Kernel','Elixir.Keyword','Elixir.Module','Elixir.Protocol',
  'Elixir.String','Elixir.Exception'],
 [],[],nil}.
{<<"/Users/rob/Working/littlewins-elixir/demos/physics/_build/test/lib/timex/ebin/Elixir.Timex.beam">>,
 'Elixir.Timex',<<"lib/timex.ex">>,
 ['Elixir.Kernel','Elixir.Module','Elixir.File'],
 [],[],nil}.
{<<"/Users/rob/Working/littlewins-elixir/demos/physics/_build/test/lib/timex/ebin/Elixir.Timex.Parse.ZoneInfo.Parser.Zone.beam">>,
 'Elixir.Timex.Parse.ZoneInfo.Parser.Zone',<<"lib/parse/zoneinfo/parser.ex">>,
 ['Elixir.Kernel.Def','Elixir.Zone','Elixir.Kernel.Typespec','Elixir.Kernel',
  'Elixir.Timex.Parse.ZoneInfo.Parser','Elixir.Module','Elixir.Protocol',
  'Elixir.TransitionInfo','Elixir.LeapSecond','Elixir.Header'],
 [],[],nil}.
{<<"/Users/rob/Working/littlewins-elixir/demos/physics/_build/test/lib/timex/ebin/Elixir.Timex.Parse.ZoneInfo.Parser.Header.beam">>,
 'Elixir.Timex.Parse.ZoneInfo.Parser.Header',
 <<"lib/parse/zoneinfo/parser.ex">>,
 ['Elixir.Kernel.Def','Elixir.Zone','Elixir.Kernel.Typespec','Elixir.Kernel',
  'Elixir.Timex.Parse.ZoneInfo.Parser','Elixir.Module','Elixir.Protocol',
  'Elixir.TransitionInfo','Elixir.LeapSecond','Elixir.Header'],
 [],[],nil}.
{<<"/Users/rob/Working/littlewins-elixir/demos/physics/_build/test/lib/timex/ebin/Elixir.Timex.Format.Time.Formatter.beam">>,
 'Elixir.Timex.Format.Time.Formatter',<<"lib/format/time/formatter.ex">>,
 ['Elixir.Timex.Date','Elixir.Kernel.Typespec','Elixir.Kernel',
  'Elixir.Module','Elixir.String.Chars','Elixir.Timex','Elixir.String',
  'Elixir.Behaviour'],
 [erlang,'Elixir.Timex.Format.Time.Formatters.Default',
  'Elixir.Timex.Format.Time.Formatters.Humanized','Elixir.Code'],
 [],nil}.
{<<"/Users/rob/Working/littlewins-elixir/demos/physics/_build/test/lib/timex/ebin/Elixir.Timex.Parse.ZoneInfo.Parser.TransitionInfo.beam">>,
 'Elixir.Timex.Parse.ZoneInfo.Parser.TransitionInfo',
 <<"lib/parse/zoneinfo/parser.ex">>,
 ['Elixir.Kernel.Def','Elixir.Zone','Elixir.Kernel.Typespec','Elixir.Kernel',
  'Elixir.Timex.Parse.ZoneInfo.Parser','Elixir.Module','Elixir.Protocol',
  'Elixir.TransitionInfo','Elixir.LeapSecond','Elixir.Header'],
 [],[],nil}.
{<<"/Users/rob/Working/littlewins-elixir/demos/physics/_build/test/lib/timex/ebin/Elixir.Timex.Parse.ZoneInfo.Parser.LeapSecond.beam">>,
 'Elixir.Timex.Parse.ZoneInfo.Parser.LeapSecond',
 <<"lib/parse/zoneinfo/parser.ex">>,
 ['Elixir.Kernel.Def','Elixir.Zone','Elixir.Kernel.Typespec','Elixir.Kernel',
  'Elixir.Timex.Parse.ZoneInfo.Parser','Elixir.Module','Elixir.Protocol',
  'Elixir.TransitionInfo','Elixir.LeapSecond','Elixir.Header'],
 [],[],nil}.
{<<"/Users/rob/Working/littlewins-elixir/demos/physics/_build/test/lib/timex/ebin/Elixir.Timex.Format.Time.Formatters.Humanized.beam">>,
 'Elixir.Timex.Format.Time.Formatters.Humanized',
 <<"lib/format/time/formatters/humanized.ex">>,
 ['Elixir.Timex.Date',erlang,'Elixir.Kernel.Typespec','Elixir.Kernel',
  'Elixir.Module','Elixir.String.Chars','Elixir.String',
  'Elixir.Timex.Format.Time.Formatter'],
 ['Elixir.Timex.Time','Elixir.Enum','Elixir.Atom'],
 [],nil}.
{<<"/Users/rob/Working/littlewins-elixir/demos/physics/_build/test/lib/timex/ebin/Elixir.Timex.Parse.ZoneInfo.Parser.beam">>,
 'Elixir.Timex.Parse.ZoneInfo.Parser',<<"lib/parse/zoneinfo/parser.ex">>,
 ['Elixir.Kernel.Def','Elixir.Timex.Parse.ZoneInfo.Parser.LeapSecond',
  'Elixir.Zone','Elixir.Kernel.Typespec','Elixir.Kernel','Elixir.Module',
  'Elixir.Protocol','Elixir.TransitionInfo',
  'Elixir.Timex.Parse.ZoneInfo.Parser.TransitionInfo','Elixir.LeapSecond',
  'Elixir.Timex.Parse.ZoneInfo.Parser.Zone',
  'Elixir.Timex.Parse.ZoneInfo.Parser.Header','Elixir.Header'],
 [erlang,'Elixir.Map','Elixir.Range','Elixir.String.Chars','Elixir.File',
  'Elixir.Enum'],
 [],nil}.
{<<"/Users/rob/Working/littlewins-elixir/demos/physics/_build/test/lib/timex/ebin/Elixir.Timex.Parse.DateTime.Parsers.beam">>,
 'Elixir.Timex.Parse.DateTime.Parsers',<<"lib/parse/datetime/parsers.ex">>,
 ['Elixir.Kernel','Elixir.Module','Elixir.Combine.Parsers.Base',
  'Elixir.Combine.Parsers.Text'],
 [erlang,'Elixir.String.Chars','Elixir.Stream','Elixir.List','Elixir.String',
  'Elixir.Timex.Parse.DateTime.Helpers','Elixir.Enum'],
 [],nil}.
{<<"/Users/rob/Working/littlewins-elixir/demos/physics/_build/test/lib/timex/ebin/Elixir.Timex.TimezoneInfo.beam">>,
 'Elixir.Timex.TimezoneInfo',<<"lib/timezone/timezone_info.ex">>,
 ['Elixir.Kernel.Def','Elixir.Kernel','Elixir.Module','Elixir.Protocol'],
 [],[],nil}.
{<<"/Users/rob/Working/littlewins-elixir/demos/physics/_build/test/lib/timex/ebin/Elixir.Timex.Parse.DateTime.Tokenizers.Directive.beam">>,
 'Elixir.Timex.Parse.DateTime.Tokenizers.Directive',
 <<"lib/parse/datetime/tokenizers/directive.ex">>,
 [erlang,'Elixir.Kernel.Def','Elixir.Kernel.Typespec','Elixir.Kernel',
  'Elixir.Module','Elixir.Protocol','Elixir.String'],
 ['Elixir.Keyword','Elixir.Timex.Parse.DateTime.Parsers',
  'Elixir.String.Chars'],
 [],nil}.
{<<"/Users/rob/Working/littlewins-elixir/demos/physics/_build/test/lib/timex/ebin/Elixir.Timex.Parse.DateTime.Tokenizer.beam">>,
 'Elixir.Timex.Parse.DateTime.Tokenizer',
 <<"lib/parse/datetime/tokenizer.ex">>,
 ['Elixir.Kernel.Typespec','Elixir.Kernel',
  'Elixir.Timex.Parse.DateTime.Tokenizers.Directive','Elixir.Module',
  'Elixir.String','Elixir.Timex.DateTime','Elixir.Behaviour'],
 ['Elixir.Code'],
 [],nil}.
{<<"/Users/rob/Working/littlewins-elixir/demos/physics/_build/test/lib/timex/ebin/Elixir.Timex.Format.Time.Formatters.Default.beam">>,
 'Elixir.Timex.Format.Time.Formatters.Default',
 <<"lib/format/time/formatters/default.ex">>,
 ['Elixir.Timex.Date',erlang,'Elixir.Kernel.Typespec','Elixir.Kernel',
  'Elixir.Module','Elixir.String.Chars','Elixir.String',
  'Elixir.Timex.Format.Time.Formatter'],
 [math,'Elixir.Timex.Time','Elixir.Enum'],
 [],nil}.
{<<"/Users/rob/Working/littlewins-elixir/demos/physics/_build/test/lib/timex/ebin/Elixir.Timex.Date.Convert.Timex.DateTime.beam">>,
 'Elixir.Timex.Date.Convert.Timex.DateTime',<<"lib/date/date_convert.ex">>,
 [erlang,'Elixir.Kernel.Typespec','Elixir.Kernel','Elixir.Timex.Date.Convert',
  'Elixir.Module','Elixir.Protocol',lists,'Elixir.Timex.DateTime',
  'Elixir.Timex.TimezoneInfo','Elixir.Atom'],
 ['Elixir.Timex.Date.Convert.Function','Elixir.Timex.Date.Convert.PID',
  'Elixir.Timex.Date.Convert.Map','Elixir.Timex.Date.Convert.Atom',
  'Elixir.Timex.Date.Convert.Port','Elixir.Timex.Date.Convert.Tuple',
  'Elixir.Timex.Date.Convert.List','Elixir.Timex.Date.Convert.Reference',
  'Elixir.Timex.Date.Convert.BitString','Elixir.Timex.Date.Convert.Float',
  'Elixir.Timex.Date.Convert.Integer','Elixir.Code',
  'Elixir.Protocol.UndefinedError'],
 [],nil}.
{<<"/Users/rob/Working/littlewins-elixir/demos/physics/_build/test/lib/timex/ebin/Elixir.Timex.DateTime.beam">>,
 'Elixir.Timex.DateTime',<<"lib/date/datetime.ex">>,
 ['Elixir.Kernel.Def','Elixir.Kernel','Elixir.Module','Elixir.Protocol',
  'Elixir.Timex.TimezoneInfo'],
 [],[],nil}.
{<<"/Users/rob/Working/littlewins-elixir/demos/physics/_build/test/lib/timex/ebin/Elixir.Timex.DateFormat.beam">>,
 'Elixir.Timex.DateFormat',<<"lib/date/date_format.ex">>,
 [erlang,'Elixir.Kernel.Def','Elixir.Kernel.Typespec','Elixir.Kernel',
  'Elixir.Keyword','Elixir.Module','Elixir.List','Elixir.String',
  'Elixir.Timex.Format.DateTime.Formatter','Elixir.Timex.DateTime',
  'Elixir.Timex.Parse.DateTime.Parser','Elixir.ArgumentError'],
 ['Elixir.Timex.Format.DateTime.Formatters.Strftime',
  'Elixir.Timex.Parse.DateTime.Tokenizers.Strftime'],
 [],nil}.
{<<"/Users/rob/Working/littlewins-elixir/demos/physics/_build/test/lib/timex/ebin/Elixir.Timex.Parse.DateTime.Parser.beam">>,
 'Elixir.Timex.Parse.DateTime.Parser',<<"lib/parse/datetime/parser.ex">>,
 ['Elixir.Kernel.Typespec','Elixir.Kernel',
  'Elixir.Timex.Parse.DateTime.Tokenizers.Directive','Elixir.Module',
  'Elixir.String.Chars','Elixir.String','Elixir.Timex.DateTime',
  'Elixir.Timex.TimezoneInfo','Elixir.Combine.Parsers.Base'],
 ['Elixir.Timex.Date',erlang,'Elixir.Combine','Elixir.Timex.Date.Convert',
  'Elixir.Stream','Elixir.List','Elixir.Timex.Time','Elixir.Timex.Timezone',
  'Elixir.Enum','Elixir.Timex.Parse.ParseError',
  'Elixir.Timex.Parse.DateTime.Tokenizers.Default'],
 [],nil}.
{<<"/Users/rob/Working/littlewins-elixir/demos/physics/_build/test/lib/timex/ebin/Elixir.Timex.Utils.beam">>,
 'Elixir.Timex.Utils',<<"lib/utils/utils.ex">>,
 ['Elixir.Kernel.Typespec','Elixir.Kernel','Elixir.Module',
  'Elixir.Enumerable'],
 [erlang,'Elixir.Path','Elixir.Process','Elixir.String.Chars','Elixir.Stream',
  beam_lib,'Elixir.Mix.Project','Elixir.String','Elixir.File','Elixir.Enum',
  'Elixir.Code','Elixir.Integer'],
 [],nil}.
{<<"/Users/rob/Working/littlewins-elixir/demos/physics/_build/test/lib/timex/ebin/Elixir.Timex.Parse.DateTime.Tokenizers.Default.beam">>,
 'Elixir.Timex.Parse.DateTime.Tokenizers.Default',
 <<"lib/parse/datetime/tokenizers/default.ex">>,
 ['Elixir.Kernel.Typespec','Elixir.Kernel',
  'Elixir.Timex.Parse.DateTime.Tokenizers.Directive','Elixir.Module',
  'Elixir.Combine.ParserState','Elixir.String','Elixir.Timex.DateTime',
  'Elixir.Timex.Parse.DateTime.Tokenizer','Elixir.Combine.Parsers.Base',
  'Elixir.Combine.Parsers.Text'],
 [erlang,'Elixir.Combine','Elixir.Keyword','Elixir.List','Elixir.Enum'],
 [],nil}.
{<<"/Users/rob/Working/littlewins-elixir/demos/physics/_build/test/lib/timex/ebin/Elixir.Timex.Parse.DateTime.Tokenizers.Strftime.beam">>,
 'Elixir.Timex.Parse.DateTime.Tokenizers.Strftime',
 <<"lib/parse/datetime/tokenizers/strftime.ex">>,
 ['Elixir.Kernel.Typespec','Elixir.Kernel',
  'Elixir.Timex.Parse.DateTime.Tokenizers.Directive','Elixir.Module',
  'Elixir.String','Elixir.Timex.DateTime',
  'Elixir.Timex.Parse.DateTime.Tokenizer','Elixir.Combine.Parsers.Base',
  'Elixir.Combine.Parsers.Text'],
 [erlang,'Elixir.Combine','Elixir.Keyword','Elixir.List','Elixir.Enum'],
 [],nil}.
{<<"/Users/rob/Working/littlewins-elixir/demos/physics/_build/test/lib/timex/ebin/Elixir.Timex.Time.beam">>,
 'Elixir.Timex.Time',<<"lib/time/time.ex">>,
 [erlang,'Elixir.Kernel.Typespec','Elixir.Kernel','Elixir.Module',
  'Elixir.Date','Elixir.Timex.Utils','Elixir.Enum'],
 ['Elixir.Float',calendar],
 [],nil}.
{<<"/Users/rob/Working/littlewins-elixir/demos/physics/_build/test/lib/timex/ebin/Elixir.Timex.Format.DateTime.Formatter.beam">>,
 'Elixir.Timex.Format.DateTime.Formatter',
 <<"lib/format/datetime/formatter.ex">>,
 ['Elixir.Kernel.Typespec','Elixir.Kernel',
  'Elixir.Timex.Parse.DateTime.Tokenizers.Directive','Elixir.Module',
  'Elixir.String','Elixir.Timex.DateTime','Elixir.Behaviour'],
 ['Elixir.Timex.Date',erlang,'Elixir.String.Chars','Elixir.Timex.Time',
  'Elixir.Timex.Format.FormatError','Elixir.Timex.Timezone',
  'Elixir.Timex.Format.DateTime.Formatters.Default','Elixir.Atom',
  'Elixir.Code'],
 [],nil}.
{<<"/Users/rob/Working/littlewins-elixir/demos/physics/_build/test/lib/timex/ebin/Elixir.Timex.Timezone.beam">>,
 'Elixir.Timex.Timezone',<<"lib/timezone/timezone.ex">>,
 ['Elixir.Timex.Date',erlang,'Elixir.Kernel.Typespec','Elixir.Kernel',
  'Elixir.Module','Elixir.String','Elixir.Tzdata','Elixir.Timex.DateTime',
  'Elixir.Enum','Elixir.Timex.TimezoneInfo','Elixir.Application'],
 ['Elixir.Map','Elixir.String.Chars','Elixir.Stream',
  'Elixir.Timex.Timezone.Local',calendar,'Elixir.Integer'],
 [],nil}.
{<<"/Users/rob/Working/littlewins-elixir/demos/physics/_build/test/lib/timex/ebin/Elixir.Timex.Timezone.Local.beam">>,
 'Elixir.Timex.Timezone.Local',<<"lib/timezone/timezone_local.ex">>,
 ['Elixir.Kernel.Typespec','Elixir.Kernel','Elixir.Module',
  'Elixir.Timex.Parse.ZoneInfo.Parser.TransitionInfo','Elixir.String',
  'Elixir.Timex.DateTime','Elixir.Timex.Parse.ZoneInfo.Parser.Zone'],
 ['Elixir.Timex.Date','Elixir.Regex',erlang,'Elixir.Path',os,
  'Elixir.Timex.Parse.ZoneInfo.Parser','Elixir.String.Chars',
  'Elixir.RuntimeError','Elixir.IO','Elixir.Stream','Elixir.List',
  'Elixir.File',filename,file,'Elixir.Enum','Elixir.Timex.Timezone.Database',
  win32reg,'Elixir.System','Elixir.ArgumentError','Elixir.Application'],
 [],nil}.
{<<"/Users/rob/Working/littlewins-elixir/demos/physics/_build/test/lib/timex/ebin/Elixir.Timex.Format.DateTime.Formatters.Strftime.beam">>,
 'Elixir.Timex.Format.DateTime.Formatters.Strftime',
 <<"lib/format/datetime/formatters/strftime.ex">>,
 [erlang,'Elixir.Kernel.Def','Elixir.Kernel.Typespec','Elixir.Kernel',
  'Elixir.Timex.Parse.DateTime.Tokenizers.Directive','Elixir.Keyword',
  'Elixir.Module','Elixir.List','Elixir.String',
  'Elixir.Timex.Format.DateTime.Formatter','Elixir.Timex.DateTime',
  'Elixir.Timex.Parse.DateTime.Tokenizers.Strftime','Elixir.ArgumentError'],
 ['Elixir.FormatError','Elixir.Timex.Format.DateTime.Formatters.Default'],
 [],nil}.
{<<"/Users/rob/Working/littlewins-elixir/demos/physics/_build/test/lib/timex/ebin/Elixir.Timex.Format.DateTime.Formatters.Default.beam">>,
 'Elixir.Timex.Format.DateTime.Formatters.Default',
 <<"lib/format/datetime/formatters/default.ex">>,
 [erlang,'Elixir.Kernel.Def','Elixir.Kernel.Typespec','Elixir.Kernel',
  'Elixir.Timex.Parse.DateTime.Tokenizers.Directive','Elixir.Keyword',
  'Elixir.Module','Elixir.List','Elixir.String',
  'Elixir.Timex.Format.DateTime.Formatter','Elixir.Timex.DateTime',
  'Elixir.ArgumentError','Elixir.Timex.Parse.DateTime.Tokenizers.Default'],
 ['Elixir.Timex.Format.FormatError'],
 [],nil}.
{<<"/Users/rob/Working/littlewins-elixir/demos/physics/_build/test/lib/timex/ebin/Elixir.Timex.Timezone.Database.beam">>,
 'Elixir.Timex.Timezone.Database',<<"lib/timezone/database.ex">>,
 ['Elixir.Path','Elixir.Kernel','Elixir.Module','Elixir.Enum','Elixir.Code'],
 [],[],nil}.
{<<"/Users/rob/Working/littlewins-elixir/demos/physics/_build/test/lib/timex/ebin/Elixir.Timex.Date.beam">>,
 'Elixir.Timex.Date',<<"lib/date/date.ex">>,
 [erlang,'Elixir.Kernel.Def','Elixir.Kernel.Typespec','Elixir.Kernel',
  'Elixir.Keyword','Elixir.Module','Elixir.String.Chars','Elixir.List',
  'Elixir.String','Elixir.Timex.Timezone','Elixir.Timex.DateTime',
  'Elixir.Record','Elixir.Enum','Elixir.Timex.TimezoneInfo',
  'Elixir.ArgumentError'],
 ['Elixir.Map','Elixir.RuntimeError','Elixir.Timex.Time',calendar],
 [],nil}.
